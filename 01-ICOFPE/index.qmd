---
format: 
  revealjs:
    navigation-mode: vertical
    logo: ../libs/unl/N.svg
    theme: ../libs/unl/inverse.scss
    includes:
      in_header: ../libs/unl/header.html
    lib_dir: libs
    embed-resources: true
    title-slide-attributes: 
      data-background-image: field.jpg
      data-background-size: contain
      data-background-opacity: "0.5"
---
```{r setup, include = F}
library(dplyr)
library(ggplot2)
library(ggthemes)

library(sf)

library(mgcv)
library(gratia)
library(itsadug)

library(gt)
library(gtsummary)
```

# Why Data Visualization? {background-image="field.jpg"}

## Exploratory Data Analysis

- Identify issues with data quality/import ("gut check")

- Look at raw data

- Develop initial hypotheses and questions

## Exploratory Data Analysis

```{r cz21-processing, include = F}
cz21 <- readRDS("data/cz21/Analysis-Ready/analysis_data.rds")

cz21_centroids <- sf::st_centroid(cz21$geometry) |>
           st_cast("POINT") |>
           as("Spatial") |>
  as("data.frame") 
names(cz21_centroids) <- c("x_coord", "y_coord")
cz21 <- cz21 %>% bind_cols(cz21_centroids)

# Fit a basic gam model
model <- gam(yield ~ s(s_rate) + s(elev) + s(slope) + s(clay) + s(silt) + te(x_coord,y_coord), data = cz21, select = T)
```

During Design:

```{r}

ggplot(cz21, aes(fill = factor(trt_s))) + 
  geom_sf() + 
  theme_map() + 
  theme(legend.position = "right") + 
  scale_fill_manual("Seed Rate", values = c("#F5DFE6", "#EABFCD", "#DF9FB4", "#D4809C", "#C86183", "#BC436B")) + 
  ggtitle("Design Preview Plot")
```

## Exploratory Data Analysis

After Application: 

```{r}
ggplot(cz21, aes(fill = s_rate - trt_s)) + 
  geom_sf() + 
  theme_map() + 
  theme(legend.position = "right") + 
  scale_fill_gradient2("Deviation from\nExperiment Plan", low = "#0059de", mid = "#ffffff", high = "#ff9603", midpoint = 0, limits = c(-20, 20)) + 
  ggtitle("As-Applied Plot")
```

## Exploratory Data Analysis

After Harvest: 

```{r}
ggplot(cz21, aes(fill = yield)) + 
  geom_sf() + 
  theme_map() + 
  theme(legend.position = "right") + 
  scale_fill_gradient(high = "#196d28", low = "#ccebca", limits = c(0, 70)) + 
  ggtitle("Yield")
```

## Understand Results

- Visuals help us understand what a model is doing

- Useful for identifying areas where models may be less accurate

- Look at raw data vs. model results


## Understand Results {.r-fit-text .small}
```{r, results = 'asis'}
res <- summary(model)
gt_group(
res$p.table %>% as.data.frame() %>% mutate(effect = row.names(.)) %>% select(effect, Estimate, `Std. Error`, `t value`, `Pr(>|t|)`) %>% gt() %>%
  fmt_number(decimals = 4) %>%
  tab_header("Parametric Coefficients"),

res$s.table %>% as.data.frame() %>% mutate(effect = row.names(.)) %>% select(effect, edf, Ref.df, F, `p-value`) %>% gt() %>%
  fmt_number(decimals = 4) %>%
  tab_header("Approximate Significance of Smooth Terms") %>%
  data_color(columns = `p-value`, target_columns = 2:5, method = "bin", bins = c(0, 0.001, 0.01, 0.05, 1), palette = c("#a64b4b", "#d4908b", "#ffd6d2", "white", "white"))
  
)

# itsadug::gamtabs(summary(model), type = "html")
```

## Understand Model Results

```{r}
# appraise(model)

draw(model, select = c("s(s_rate)", "s(elev)", "s(slope)", "s(clay)", "s(silt)"), ncol = 3)
```


## Understand Model Results

```{r}
draw(model, select = c("te(x_coord,y_coord)")) + 
  ggtitle("Spatial Effects") + theme_map() + 
  theme(legend.position = "right")
```


## Make Decisions
```{r gd21-processing}
gd21 <- readRDS("data/GD21/Analysis-Ready/analysis_data.rds")
gd21_centroids <- sf::st_centroid(gd21$geometry) |>
           st_cast("POINT") |>
           as("Spatial") |>
  as("data.frame") 
names(gd21_centroids) <- c("x_coord", "y_coord")
gd21 <- gd21 %>% bind_cols(gd21_centroids)

```

```{r}
ggplot(gd21, aes(fill = factor(trt_n))) + 
  geom_sf() + 
  theme_map() + 
  theme(legend.position = c(1, 0)) + 
  scale_fill_manual("N Rate", values = c("#efdbff", "#cdade9", "#ab81d3", "#8756bc", "#6129a6")) + 
  ggtitle("Design Preview Plot")
```


## Make Decisions
```{r}
model2 <- gam(yield ~ muname + s(n_rate) + s(elev) + s(slope) + s(elev, slope) + te(x_coord,y_coord), data = gd21, select = T)

# summary(model2)
res2 <- summary(model2)
gt_group(
res2$p.table %>% 
  as.data.frame() %>% 
  mutate(effect = row.names(.)) %>% 
  select(effect, Estimate, `Std. Error`, `t value`, `Pr(>|t|)`) %>% 
  gt() %>%
  fmt_number(decimals = 4) %>%
  tab_header("Parametric Coefficients"),

res2$s.table %>% 
  as.data.frame() %>% 
  mutate(effect = row.names(.)) %>% 
  select(effect, edf, Ref.df, F, `p-value`) %>% 
  gt() %>%
  fmt_number(decimals = 4) %>%
  tab_header("Approximate Significance of Smooth Terms") %>%
  data_color(columns = `p-value`, target_columns = 2:5, method = "bin", bins = c(0, 0.001, 0.01, 0.05, 1), palette = c("#a64b4b", "#d4908b", "#ffd6d2", "white", "white"))
)
```

## Make Decisions
```{r}
draw(model2, select = c("s(n_rate)", "s(elev)", "s(slope)"), ncol = 3)
```


## Make Decisions
```{r}
draw(model2, select = c("te(x_coord,y_coord)")) + 
  ggtitle("Spatial Effects") + theme_map() + 
  theme(legend.position = "right")
```

## Make Decisions

```{r}
tmp <- gd21 %>%
  mutate(slopeC = cut(slope, c(0:3, 6)),
         elevC = cut(elev, breaks =c(245, 247, 249, 251, 254)))

tmp %>%
ggplot(aes(x = n_rate, y = yield, color = muname)) + 
  geom_point() + 
  geom_smooth(aes(x = n_rate, y = yield), ~filter(., muname %in% c("Danabrook silt loam", "Elpaso silty clay loam", "Octagon silt loam"))) + 
  guides(color = "none") + facet_wrap(~muname) + 
  xlab("Nitrogen Rate") + ylab("Yield") + 
  ggtitle("Yield Response by Soil Type")
```

